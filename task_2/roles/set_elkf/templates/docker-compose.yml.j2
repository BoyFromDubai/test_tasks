version: '2.2'
services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:{{ elkf_version }}
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
    ports:
      - 9200:9200
      - 9300:9300
    networks:
      - elk

    healthcheck:
      test: ["CMD", "curl", "-f", "http://elasticsearch:9200"]
      interval: 15s
      timeout: 7s
      retries: 12

  kibana:
    image: docker.elastic.co/kibana/kibana:{{ elkf_version }}
    container_name: kibana
    ports:
      - 5601:5601
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    networks:
      - elk

    depends_on:
      elasticsearch:
        condition: service_healthy
  
  logstash:
    image: docker.elastic.co/logstash/logstash:{{ elkf_version }}
    container_name: 'logstash'
    restart: always
    volumes:
      - '{{ conf_dir }}/logstash_{{ elkf_version }}.conf:/usr/share/logstash/pipeline/logstash.conf'
      - '{{ logs_dir }}:/usr/share/logstash/logs'
    ports:
      - '5044:5044'
      - '9600:9600'
    networks:
      - elk
    depends_on:
      elasticsearch:
        condition: service_healthy

    healthcheck:
      test: ["CMD", "curl", "-f", "http://logstash:9600"]
      interval: 15s
      timeout: 7s
      retries: 12

  filebeat:
    image: docker.elastic.co/beats/filebeat:{{ elkf_version }}
    user: 0:0
    container_name: 'filebeat'
    restart: always
    environment:
      LOGSTASH_HOST: "logstash:5044"
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock:ro'
      - '/var/lib/docker/containers:/var/lib/docker/containers:ro'

      - '{{ conf_dir }}/filebeat_{{ elkf_version }}.yml:/usr/share/filebeat/filebeat.yml:ro'
      - '{{ files_dir }}/test.log:/logs_to_parse/test.log'
      - '{{ logs_dir }}:/var/lib/filebeat/logs'
    depends_on:
      logstash:
        condition: service_healthy
    networks:
      - elk

networks:
  elk: